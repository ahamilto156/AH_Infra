---
- name: Install OpenHAB
  remote_user: svc-ansible
  become: true
  hosts: openhab
  pre_tasks:
  - name: Include vault vars
    include_vars: vault.yml
    no_log: true
    tags:
    - all
    - openhab
    - config
    - postgresql
    - mqtt
    - influx
    - grafana

  tasks:
  - name: Create HTTP service in IPA
    ipa_service:
      ipa_user: "{{ idm_admin_user }}"
      ipa_pass: "{{ idm_admin_pass }}"
      krbcanonicalname: HTTP/{{ ansible_fqdn }}
      state: present
    tags:
    - all
    - openhab
    - mqtt

  - name: Check if SSL certs already exist
    stat:
      path: /etc/pki/tls/certs/{{ ansible_fqdn }}.pem
    register: sslcerts
    changed_when: false
    tags:
    - all
    - openhab
    - mqtt

  # We create 2048bit key here as IoT firmwares only support this due to memory constraints
  - name: Request new SSL certs from IPA
    command: ipa-getcert request -r -g 2048 -f /etc/pki/tls/certs/{{ ansible_fqdn }}.pem -k /etc/pki/tls/private/{{ ansible_fqdn }}.key -N CN={{ ansible_fqdn }} -K HTTP/{{ ansible_fqdn }}
    when: not sslcerts.stat.exists
    tags:
    - all
    - openhab
    - mqtt

  - name: Deploy script to create client certs in IPA
    copy:
      src: create_certs.sh
      dest: /usr/local/bin
      owner: root
      group: root
      mode: 0755
    tags:
    - all
    - mqtt

  - include_role:
      name: ansible-role-openhab
    tags:
    - all
    - openhab
    - config
    - postgresql
    - mqtt
    - zwave
    - influx
    - grafana

  - name: Add rich-rule to allow Sonos uPNP
    firewalld:
      rich_rule: 'rule family="ipv4" source address="172.22.1.0/24" destination address="239.255.255.250/32" port port="1900" protocol="udp" accept'
      immediate: yes
      permanent: yes
      state: enabled
    tags:
    - all
    - openhab

  - name: Add rule to allow DHCP proxy listener
    firewalld:
      port: 6767/udp
      immediate: yes
      permanent: yes
      state: enabled
    tags:
    - all
    - openhab

  - name: Redirect DHCP requests to DHCP Proxy listener
    firewalld:
      rich_rule: 'rule family="ipv4" forward-port port="67" protocol="udp" to-port="6767"'
      immediate: yes
      permanent: yes
      state: enabled
    tags:
    - all
    - openhab

  - name: Install additional packages
    package:
      name: "{{ item }}"
      state: present
    with_items:
    - python2-speedtest-cli
    tags:
    - all
    - openhab

###############################################


- name: Install ZWave RPi
  remote_user: svc-ansible
  become: true
  hosts: zwave
  pre_tasks:
  - name: Include vault vars
    include_vars: vault.yml
    no_log: true
    tags:
    - all
    - zwave

  tasks:
  - name: Install packages
    package:
      name: "{{ item }}"
      state: present
    with_items:
    - ser2net
    tags:
    - all
    - zwave

  - name: Deploy ser2net config
    template:
      src: ser2net.conf.j2
      dest: /etc/ser2net.conf
      owner: root
      group: root
      mode: 0644
    notify: Restart ser2net
    tags:
    - all
    - zwave

  - name: Install ser2net script
    copy:
      content: |
        #!/bin/sh
        /usr/sbin/ser2net -c /etc/ser2net.conf -P /run/ser2net.pid
      dest: /usr/local/bin/ser2net.sh
      owner: root
      group: root
      mode: 0755
    notify: Restart ser2net
    tags:
    - all
    - zwave

  - name: Remove default ser2net init script
    file:
      path: /etc/init.d/ser2net
      state: absent
    tags:
    - all
    - zwave

  - name: Install ser2net service
    copy:
      src: automation/ser2net.service
      dest: /etc/systemd/system/ser2net.service
      owner: root
      group: root
      mode: 0755
    tags:
    - all
    - zwave

  - name: Enable services
    service:
      name: "{{ item }}"
      state: started
      enabled: true
      daemon_reload: true
    with_items:
    - ser2net
    tags:
    - all
    - zwave

  - name: Configure firewall
    firewalld:
      port: 7676/tcp
      immediate: yes
      permanent: yes
      state: enabled
    tags:
    - all
    - zwave

  - name: Install Z-Wave udev restart script
    copy:
      content: |
        #!/bin/sh
        systemctl restart ser2net
      dest: /usr/local/bin/restart-zwave-replug
      owner: root
      group: root
      mode: 0755
    tags:
    - all
    - zwave

  - name: Install Z-Wave udev rules
    copy:
      content: "SUBSYSTEM==\"tty\", ATTRS{idVendor}==\"0658\", ATTRS{idProduct}==\"0200\", SYMLINK+=\"zwave\", GROUP=\"dialout\", MODE=\"0666\", RUN+=\"/usr/local/bin/restart-zwave-replug\""
      dest: /etc/udev/rules.d/99-zwave-stick.rules
      owner: root
      group: root
    tags:
    - all
    - zwave

###############################################
- name: Configure OpenHAB
  remote_user: svc-ansible
  become: true
  hosts: openhab
  pre_tasks:
  - name: Include vault vars
    include_vars: vault.yml
    no_log: true
    tags:
    - all
    - config

  handlers:
  - name: Restart Openhab
    service:
      name: openhab2
      state: restarted

  tasks:
  - name: Deploy transform config files
    template:
      src: "{{ item }}"
      dest: /etc/openhab2/transform
      owner: openhab
      group: openhab
    with_fileglob:
    - templates/oh_templates/transform/*
    tags:
    - all
    - config

  - name: Deploy things config
    template:
      src: "{{ item }}"
      dest: /etc/openhab2/things
      owner: openhab
      group: openhab
    with_fileglob:
    - templates/oh_templates/things/*
    tags:
    - all
    - config

  - name: Deploy items config
    template:
      src: "{{ item }}"
      dest: /etc/openhab2/items
      owner: openhab
      group: openhab
    with_fileglob:
    - templates/oh_templates/items/*
    tags:
    - all
    - config

  - name: Deploy sitemaps config
    template:
      src: "{{ item }}"
      dest: /etc/openhab2/sitemaps
      owner: openhab
      group: openhab
    with_fileglob:
    - templates/oh_templates/sitemaps/*
    tags:
    - all
    - config

  - name: Deploy rules config
    template:
      src: "{{ item }}"
      dest: /etc/openhab2/rules
      owner: openhab
      group: openhab
    with_fileglob:
    - templates/oh_templates/rules/*
    tags:
    - all
    - config

  - name: Configure logging
    blockinfile:
      path: /var/lib/openhab2/etc/org.ops4j.pax.logging.cfg
      block: |
        log4j2.logger.sonos.name = org.eclipse.smarthome.binding.sonos
        log4j2.logger.sonos.level = DEBUG
        log4j2.logger.sonos.additivity = false
        log4j2.logger.sonos.appenderRefs = sonos
        log4j2.logger.sonos.appenderRef.sonos.ref = sonos
        log4j2.appender.sonos.name = sonos
        log4j2.appender.sonos.type = RollingRandomAccessFile
        log4j2.appender.sonos.fileName = /var/log/openhab2/sonos.log
        log4j2.appender.sonos.filePattern = /var/log/openhab2/sonos.log.%i
        log4j2.appender.sonos.immediateFlush = true
        log4j2.appender.sonos.append = true
        log4j2.appender.sonos.layout.type = PatternLayout
        log4j2.appender.sonos.layout.pattern = %d{dd-MMM-yyyy HH:mm:ss.SSS} [%-5.5p] [%-50.50c] - %m%n
        log4j2.appender.sonos.policies.type = Policies
        log4j2.appender.sonos.policies.size.type = SizeBasedTriggeringPolicy
        log4j2.appender.sonos.policies.size.size = 10MB
        log4j2.appender.sonos.strategy.type = DefaultRolloverStrategy
        log4j2.appender.sonos.strategy.max = 10

        log4j2.logger.gpslogger.name = org.openhab.binding.gpstracker
        log4j2.logger.gpslogger.level = TRACE
        log4j2.logger.gpslogger.additivity = false
        log4j2.logger.gpslogger.appenderRefs = gpslogger
        log4j2.logger.gpslogger.appenderRef.gpslogger.ref = gpslogger
        log4j2.appender.gpslogger.name = gpslogger
        log4j2.appender.gpslogger.type = RollingRandomAccessFile
        log4j2.appender.gpslogger.fileName = /var/log/openhab2/gpslogger.log
        log4j2.appender.gpslogger.filePattern = /var/log/openhab2/gpslogger.log.%i
        log4j2.appender.gpslogger.immediateFlush = true
        log4j2.appender.gpslogger.append = true
        log4j2.appender.gpslogger.layout.type = PatternLayout
        log4j2.appender.gpslogger.layout.pattern = %d{dd-MMM-yyyy HH:mm:ss.SSS} [%-5.5p] [%-50.50c] - %m%n
        log4j2.appender.gpslogger.policies.type = Policies
        log4j2.appender.gpslogger.policies.size.type = SizeBasedTriggeringPolicy
        log4j2.appender.gpslogger.policies.size.size = 10MB
        log4j2.appender.gpslogger.strategy.type = DefaultRolloverStrategy
        log4j2.appender.gpslogger.strategy.max = 10

        log4j2.logger.voicerss.name = org.openhab.voice.voicerss
        log4j2.logger.voicerss.level = OFF

        log4j2.logger.audio.name = org.eclipse.smarthome.core.audio
        log4j2.logger.audio.level = OFF

        log4j2.logger.voice.name = org.eclipse.smarthome.core.voice
        log4j2.logger.voice.level = OFF
      state: present
    notify: Restart Openhab
    tags:
    - all
    - config
