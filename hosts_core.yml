all:
  vars:
    motd_system: Home
    motd_sys_env: Core

    cis_level_1_exclusions: ['1.2.3','1.3.1','1.8','2.2.7','3.4.1','3.4.2','3.4.3','3.4.4','3.4.5','5.2.8','5.3.2']
    cis_level_2_exclusions: ['6.1.1']
      # 1.2.3   - GPG checking
      # 1.3.1   - 'aide --init' on EL8 hangs
      # 1.8     - Yum update *
      # 2.2.7   - Removes ipa-client as a dependency of rpcbind/nfs-utils.
      # 3.4.2-5 - hosts.allow and hosts.deny not configured
      # 5.2.8   - Disable root ssh
      # 5.3.2   - PAM config
      # 6.1.1.  - Audit Sytem File Permissions
    cis_chrony_servers: |+
      server ntp1.core.home.gatwards.org iburst
      server ntp2.core.home.gatwards.org iburst
      server ntp3.core.home.gatwards.org iburst
    cis_ntp_clients: "{{ cis_chrony_servers }}"

    cis_local_login_warning_banner: |+
      ###############################################################
      #  All connections to this system are monitored and recorded  #
      #  Disconnect IMMEDIATELY if you are not an authorized user!  #
      ###############################################################
    cis_remote_login_warning_banner: "{{ cis_local_login_warning_banner }}"

    # Common SSL parameters
    tls_cafile: /etc/pki/ca-trust/source/anchors/GatwardIT-IPA.pem

    # InfluxDB parameters used by multiple playbooks
    influxdb_enable_ssl: true
    #influxdb_host: influxdb.core.home.gatwards.org       # --> Requires SSL SAN to be set
    influxdb_host: prometheus.core.home.gatwards.org
    influxdb_http_port: '8086'

    # MQTT broker is used by multiple groups, common params defined here
    mqtt_broker_fqdn: automation.core.home.gatwards.org
    mqtt_broker_port: '1883'

    # Location parameters used in multple groups
    latitude: "{{ vault_latitude }}"
    longitude: "{{ vault_longitude }}"
    altitude: '698'


  children:
    automation:
      children:
        openhab:
          hosts:
            automation.core.home.gatwards.org:
          vars:
            motd_role: Home Automation Server
            cis_nginx_install: { package: nginx, state: present, service: nginx, rstate: started, enabled: true, exception: 123 }
            cis_v_3_1_1_ipv4_ip_forward: { proc_src: '/proc/sys/net/ipv4/ip_forward', kernel_param: 'net.ipv4.ip_forward', value: 1 }
            ipaclient_ssl_create_certs: true
            ipaclient_ssl_keylen: '2048'
            # Parameters for alarm panel
            elk_ip: 172.22.2.10
            elk_port: 2101
        zwave:
          hosts:
            zwave1.iot.home.gatwards.org:
          vars:
            ansible_python_interpreter: /usr/bin/python3
            motd_role: Z-Wave master

    foreman:
      hosts:
        foreman.core.home.gatwards.org: {}
      vars:
        motd_role: Provisioning Server
        cis_level_1_exclusions: ['1.2.3','1.1.5','1.3.1','1.8','2.1.1','2.1.2','2.1.3','2.1.4','2.1.5','2.2.7','3.4.1','3.4.2','3.4.3','3.4.4','3.4.5','5.2.8','5.3.2']
        # 1.1.5   - Ensure noexec on /tmp - Foreman puppetserver *REQUIRES* /tmp to be exec
        # 2.1.1-5 - Disable xinetd services - off by default anyway, causes issues if tftp is required
        cis_tftp_install: { package: tftp-server, state: present, exception: 123, service: tftp.socket, enabled: no, rstate: stopped, client: tftp, client_state: absent }
        cis_rsync_install: { package: rsync, state: present, exception: 123, service: rsyncd, enabled: no, rstate: started }
        cis_xinetd_install: { package: xinetd, state: present, exception: 123, service: xinetd, enabled: true, rstate: started }
        cis_xinetd_state: present # Set state to absent if not needed, enables conditional pass for basic services e.g. chargen
        cis_dhcpd_install: { package: "dhcp", state: present, service: dhcpd, rstate: started, enabled: true, exception: 123 }
        cis_httpd_install: { package: httpd, state: present, service: httpd, rstate: started, enabled: true, exception: 123 }


    influxdb:
      hosts:
        prometheus.core.home.gatwards.org:
          instance_ip: 172.22.1.69
          unicast_src_ip: "{{ instance_ip }}"
          unicast_peers:
          - 172.22.1.69

      vars:
        motd_role: InfluxDB
        ipaclient_ssl_create_certs: true
        ipaclient_ssl_key_mode: '0644'
        influxdb_admin_user: admin
        influxdb_admin_password: '{{ vault_influxdb_admin_password }}'
        influxdb_udp_port: '8089'
        influxdb_databases:
        - host: "{{ ansible_fqdn }}"
          name: 'prometheus'
          state: present
          retention_policy:
            enabled: true
            name: 1week
            duration: 1w
            replication: 1
        - host: "{{ ansible_fqdn }}"
          name: 'openhab'
          state: present
          retention_policy:
            enabled: true
            name: 1week
            duration: 1w
            replication: 1
        influxdb_users:
        - username: 'prometheus'
          password: "{{ vault_influxdb_prometheus_password }}"
          permissions:
          - database: 'prometheus'
            grants: ALL
        - username: 'openhab'
          password: "{{ vault_influxdb_openhab_password }}"
          permissions:
          - database: 'openhab'
            grants: ALL
        - username: 'grafana_prometheus'
          password: "{{ vault_influxdb_grafana_password }}"
          permissions:
          - database: 'prometheus'
            grants: READ
        - username: 'grafana_openhab'
          password: "{{ vault_influxdb_grafana_password }}"
          permissions:
          - database: 'openhab'
            grants: READ
        influxdb_subscriptions: []

        influxdb_relay_install: false
        influxdb_relay_http_port: '9086'
        influxdb_relay_udp_port: '9089'
        influxdb_relay_enable_ssl: true
        influxdb_relay_ssl_cert: /etc/pki/tls/certs/influxdb-proxy.pem
        influxdb_relay_vip: 172.22.1.xxx
        influxdb_relay_outputs:
        - name: influxdb1
          location: "{{ hostvars[groups['influxdb'][0]].instance_ip }}:{{ influxdb_udp_port }}"
        - name: influxdb2
          location: "{{ hostvars[groups['influxdb'][1]].instance_ip }}:{{ influxdb_udp_port }}"
        haproxy_http_port: '8186'
        haproxy_ssl_ciphers: 'EECDH+AESGCM:EDH+AESGCM:!ADH:!AECDH:!MD5'

        prometheus_install: false
        prometheus_alert_manager_install: false
        prometheus_push_gateway_install: false
        prometheus_snmp_exporter_install: false
        prometheus_blackbox_exporter_install: false

    prometheus_servers:
      vars:
        cis_nginx_install: { package: nginx, state: present, service: nginx, rstate: started, enabled: true, exception: 123 }

      children:
        prometheus:
          hosts:
            prometheus.core.home.gatwards.org:
              instance_ip: 172.22.1.69
          vars:
            motd_role: Prometheus Server
            ipaclient_ssl_create_certs: true
            ipaclient_ssl_key_mode: '0644'
            prometheus_install: true
            prometheus_node_exporter_install: true
            prometheus_alert_manager_install: true
            prometheus_push_gateway_install: true
            prometheus_snmp_exporter_install: true
            prometheus_blackbox_exporter_install: true
            prometheus_config_alerting:
            prometheus_config_rule_files:
            prometheus_config_global_external_labels:
              prom_cluster: PROMETHEUS
            prometheus_storage__tsdb__retention: '15d'
            prometheus_storage__tsdb__retention__size: '50GB'
            prometheus_node_exporter_targets:
            - project: HOME
              targets:
              - - "{{ hostvars[groups['influxdb'][0]].inventory_hostname }}:9100"
                - "foreman.core.home.gatwards.org:9100"
                - "automation.core.home.gatwards.org:9100"
                - "zwave1.iot.home.gatwards.org:9100"
                - "weather.core.home.gatwards.org:9100"
                - "ipa1.ipa.home.gatwards.org:9100"
                - "ipa2.ipa.home.gatwards.org:9100"

            prometheus_snmp_exporter_targets: []
            prometheus_blackbox_exporter_targets: []


    grafana:
      hosts:
        prometheus.core.home.gatwards.org:
          instance_ip: 172.22.1.69
      vars:
        motd_role: Grafana
        ipaclient_ssl_create_certs: true
        ipaclient_ssl_key_mode: '0644'

        grafana_datasources:
        - access: proxy
          database: prometheus
          editable: true
          isDefault: true
          name: Prometheus
          type: influxdb
          url: https://{{ hostvars[groups['influxdb'][0]].inventory_hostname }}:{{ hostvars[groups['influxdb'][0]].influxdb_http_port }}
          user: grafana_prometheus
          secureJsonData:
            password: '{{ vault_influxdb_grafana_password }}'
          basicAuth: true
          basicAuthUser: grafana_prometheus
          basicAuthPassword: "{{ vault_influxdb_grafana_password }}"
          withCredentials: true
        - access: proxy
          database: openhab
          editable: true
          isDefault: false
          name: OpenHAB
          type: influxdb
          url: https://{{ hostvars[groups['influxdb'][0]].inventory_hostname }}:{{ hostvars[groups['influxdb'][0]].influxdb_http_port }}
          user: grafana_openhab
          secureJsonData:
            password: '{{ vault_influxdb_grafana_password }}'
          basicAuth: true
          basicAuthUser: grafana_openhab
          basicAuthPassword: "{{ vault_influxdb_grafana_password }}"
          withCredentials: true


        # grafana_auth:
        #   anonymous:
        #     org_name: Main Organization
        #     org_role: Viewer
        #   basic:
        #     enabled: true
        #   disable_login_form: false
        #   disable_signout_menu: false
        #   ldap:
        #     allow_sign_up: false
        #     config_file: /etc/grafana/ldap.toml
        #   oauth_auto_login: false
        #   signout_redirect_url: ''



    #       grafana_ldap:
    #         group_mappings:
    #         - groups:
    #           - group_dn: cn=grafana-admins,cn=groups,cn=accounts,dc=grafana,dc=org
    #             org_role: Admin
    #           - group_dn: cn=grafana-editors,cn=groups,cn=accounts,dc=grafana,dc=org
    #             org_role: Editor
    #           - group_dn: '*'
    #             org_role: Viewer
    #           id: 1
    #           name: Main Org.
    #         servers:
    #           attributes:
    #             email: mail
    #             member_of: memberOf
    #             name: givenName
    #             surname: sn
    #             username: uid
    #           bind_dn: uid=svc-grafana,cn=users,cn=accounts,dc=gatwards,dc=org
    #           bind_password: grafana
    #           group_search_base_dns:
    #           - '{{ ldap_group_base }}'
    #           group_search_filter: '{{ ldap_group_filter }}'
    #           host: '{{ ldap_servers[0] }}'
    #           port: 389
    #           root_ca_cert: '{{ tls_cafile }}'
    #           search_base_dns:
    #           - '{{ ldap_user_base }}'
    #           search_filter: '{{ ldap_user_filter }}'
    #           ssl_skip_verify: true
    #           start_tls: true
    #           use_ssl: false
    #         verbose_logging: false


    workstation:
      hosts:
        desktop-01.core.home.gatwards.org:
          desktop_group: "Cinnamon Desktop"
          install_development: true
          install_playonlinux: true
          install_spotify: true
          disable_squashfs: false
        desktop-03.core.home.gatwards.org:
          desktop_group: "Cinnamon Desktop"
          has_wifi: true
          install_playonlinux: true
          install_spotify: true
          disable_squashfs: false
        desktop-04.core.home.gatwards.org:
          desktop_group: "Cinnamon Desktop"
          #has_wifi: true
          install_playonlinux: true
          install_spotify: true
          disable_squashfs: false
        jumphost.lab.home.gatwards.org:
          motd_role: External Jump Box
          #ssh_PermitRootLogin: 'no'
          setup_automounts: false
          configure_printer: false
          install_chrome: false
          install_xrdp: true
          additional_ws_packages: []
        sandbox-xxx.lab.home.gatwards.org:
          desktop_group: "Cinnamon Desktop"
      vars:
        motd_role: Workstation
        setup_automounts: true
        configure_printer: true
        install_chrome: true
        install_xrdp: true
        install_playonlinux: false
        install_spotify: false
        #desktop_group: "Cinnamon Desktop"
        browser_startup_url: 'https://google.com.au'
        install_development: false
        additional_ws_packages:
        - vlc

    weather:
      hosts:
        weather.core.home.gatwards.org: {}
      vars:
        motd_role: Weather Station
        ipaclient_ssl_create_certs: true
        # Custom scripting
        bomxml2mqtt_bomuri: ftp://ftp.bom.gov.au/anon/gen/fwo/IDN11060.xml
        bomxml2mqtt_user: bomxml
        bomxml2mqtt_pass: "{{ vault_bomxml2mqtt_pass }}"
        bomxml2mqtt_topic: weather/bomxml/

    ungrouped: {}
