---
- name: Configure InfluxDB
  remote_user: svc-ansible
  become: true
  hosts: influxdb
  vars_files:
  - vault.yml

  tasks:
  - import_role:
      name: ansible-influxdb
    tags:
    - monitoring
    - influxdb
    vars:
      influxdb_redhat_pre_reqs:
      - python3-pip
      - python3-requests
      influxdb_config: true
      influxdb_http:
        auth_enabled: true
        bind_address: ""
        bind_port: "{{ influxdb_http_port }}"
        bind_socket: /var/run/influxdb.sock
        enabled: true
        https_enabled: "{{ influxdb_enable_ssl }}"
        https_certificate: /etc/pki/tls/certs/{{ ansible_fqdn }}.pem
        https_private_key: /etc/pki/tls/private/{{ ansible_fqdn }}.key
        log_enabled: true
        max_connection_limit: 0
        max_row_limit: 0
        pprof_enabled: true
        realm: InfluxDB
        shared_secret: ""
        unix_socket_enabled: false
        write_tracing: false

  # Not done inside role
  - name: Open InfluxDB firewall ports
    tags:
    - monitoring
    - influxdb
    firewalld:
      port: "{{ item }}"
      immediate: yes
      permanent: yes
      state: enabled
    with_items:
    - 8086/tcp
    #- 8189/udp

  # Not done inside role
  - name: Create InfluxDB users
    tags:
    - monitoring
    - influxdb
    influxdb_user:
      login_username: "{{ influxdb_admin_user }}"
      login_password: "{{ influxdb_admin_password }}"
      hostname: "{{ ansible_fqdn }}"
      ssl: "{{ influxdb_enable_ssl | default(false) }}"
      user_name: "{{ item.0.username }}"
      user_password: "{{ item.0.password }}"
      grants:
      - database: "{{ item.1.database }}"
        privilege: '{{ item.1.grants }}'
    with_subelements:
    - "{{ influxdb_users }}"
    - permissions
    no_log: true


- name: Configure Prometheus
  remote_user: svc-ansible
  become: true
  hosts: prometheus
  vars_files:
  - vault.yml

  tasks:
  - import_role:
      name: ansible-prometheus
    tags:
    - monitoring
    - prometheus
    vars:
      prometheus_alert_manager_install: false
      prometheus_push_gateway_install: true
      prometheus_snmp_exporter_install: true
      prometheus_blackbox_exporter_install: false
      prometheus_install_dir: /opt
      prometheus_version: '2.14.0'
      prometheus_node_exporter_version: '0.18.1'
      prometheus_alert_manager_version: '0.20.0'
      prometheus_push_gateway_version: '1.0.0'
      prometheus_snmp_exporter_version: '0.16.1'
      prometheus_blackbox_exporter_version: '0.16.0'
      prometheus_config_global_scrape_interval: '15s'
      prometheus_config_global_evaluation_interval: '30s'
      prometheus_config_global_scrape_timeout: '10s'
      prometheus_config_global_external_labels:
        xxx: something
      prometheus_config_remote_write:
      - url: "https://{{ groups['influxdb'][0] }}:{{ influxdb_http_port }}/api/v1/prom/write?db=prometheus&u=prometheus&p={{ vault_influxdb_prometheus_password|urlencode() }}"

      prometheus_config_scrape_configs:
      - job_name: 'prometheus'
        honor_labels: true
        scrape_interval: '20s'
        scrape_timeout: '2s'
        metrics_path: '/metrics'
        scheme: 'http'
        static_configs:
        - targets:
          - '{{ ansible_fqdn }}:9090'
      - job_name: 'node_exporter'
        file_sd_configs:
        - files:
          - /etc/prometheus/nodeexp_targets.yml
      - job_name: 'pushgateway'
        honor_labels: true
        static_configs:
        - targets:
          - '{{ ansible_fqdn }}:9091'
      - job_name: 'snmp'
        file_sd_configs:
        - files:
          - /etc/prometheus/snmp_targets.yml
        scrape_interval: '60s'
        scrape_timeout: '10s'
        metrics_path: /snmp
        params:
          module: [if_mib]
        relabel_configs:
        - source_labels: [__address__]
          target_label: __param_target
        - source_labels: [__param_target]
          target_label: instance
        - target_label: __address__
          replacement: 127.0.0.1:9116  # The SNMP exporter's real hostname:port.
      - job_name: 'blackbox'
        metrics_path: /probe
        params:
          module: [http_2xx]  # Look for a HTTP 200 response.
        file_sd_configs:
        - files:
          - /etc/prometheus/blackbox_targets.yml
        scrape_interval: '60s'
        scrape_timeout: '10s'
        relabel_configs:
        - source_labels: [__address__]
          target_label: __param_target
        - source_labels: [__param_target]
          target_label: instance
        - target_label: __address__
          replacement: 127.0.0.1:9115  # The blackbox exporter's real hostname:port.


      prometheus_collector_____enabled_collectors:
      - 'collector.arp'
      - 'collector.bcache'
      - 'collector.bonding'
      - 'collector.cpu'
      - 'collector.cpufreq'
      - 'collector.edac'
      - 'collector.entropy'
      - 'collector.filefd'
      - 'collector.hwmon'
      - 'collector.ipvs'
      - 'collector.loadavg'
      - 'collector.mdadm'
      - 'collector.meminfo'
      - 'collector.netdev'
      - 'collector.netstat'
      - 'collector.nfs'
      - 'collector.nfsd'
      - 'collector.stat'
      - 'collector.time'
    #  - 'collector.timex'
    #  - 'collector.uname'
      - 'collector.vmstat'
    #  - 'collector.xfs'
    #  - 'collector.zfs'
    #  - 'collector.buddyinfo' # disabled by default
    #  - 'collector.conntrack' # disabled by default
      - 'collector.diskstats' # disabled by default
    #  - 'collector.drbd' # disabled by default
      - 'collector.filesystem' # disabled by default
    #  - 'collector.infiniband' # disabled by default
    #  - 'collector.interrupts' # disabled by default
    #  - 'collector.ksmd' # disabled by default
    #  - 'collector.logind' # disabled by default
    #  - 'collector.meminfo_numa' # disabled by default
      - 'collector.mountstats' # disabled by default
    #  - 'collector.netclass' # disabled by default
    #  - 'collector.ntp' # disabled by default
    #  - 'collector.ntp.server-is-local' # disabled by default
    #  - 'collector.perf' # disabled by default
    #  - 'collector.pressure' # disabled by default
    #  - 'collector.processes' # disabled by default
    #  - 'collector.qdisc' # disabled by default
    #  - 'collector.runit' # disabled by default
    #  - 'collector.sockstat' # disabled by default
    #  - 'collector.supervisord' # disabled by default
      - 'collector.systemd' # disabled by default
    #  - 'collector.systemd.enable-restarts-metrics' # disabled by default
    #  - 'collector.systemd.enable-start-time-metrics' # disabled by default
    #  - 'collector.systemd.enable-task-metrics' # disabled by default
    #  - 'collector.systemd.private' # disabled by default
    #  - 'collector.tcpstat' # disabled by default
      - 'collector.textfile' # disabled by default
    #  - 'collector.wifi' # disabled by default
    #  - 'web.disable-exporter-metrics' # disabled by default

      prometheus_snmp_exporter_log__format: 'logfmt'

      prometheus_black_box_config_modules:
        http_2xx:
          prober: http
          timeout: 5s
          http:
            valid_http_versions: ["HTTP/1.1", "HTTP/2"]
            valid_status_codes: []  # Defaults to 2xx
            method: GET
            headers:
              Host: vhost.example.com
              Accept-Language: en-US
              Origin: example.com
            no_follow_redirects: false
            fail_if_ssl: false
            fail_if_not_ssl: false
            fail_if_body_matches_regexp:
              - "Could not connect to database"
            fail_if_body_not_matches_regexp:
              - "Download the latest version here"
            fail_if_header_matches: # Verifies that no cookies are set
              - header: Set-Cookie
                allow_missing: true
                regexp: '.*'
            fail_if_header_not_matches:
              - header: Access-Control-Allow-Origin
                regexp: '(\*|example\.com)'
            tls_config:
              insecure_skip_verify: false
            preferred_ip_protocol: "ip4" # defaults to "ip6"
            ip_protocol_fallback: false  # no fallback to "ip6"


      prometheus_node_exporter_targets:
      - influxdb.lab.home.gatwards.org:9100
      - grafana.lab.home.gatwards.org:9100

      prometheus_snmp_targets:
      - 172.22.4.1

      prometheus_blackbox_targets:
      - http://google.com.au
      - https://prometheus.io



  - name: Deploy monitoring target config
    tags:
    - monitoring
    - prometheus
    - prometheus_targets
    template:
      src: "{{ item }}.j2"
      dest: "/etc/prometheus/{{ item }}"
      owner: prometheus
      group: prometheus
      mode: '0644'
    with_items:
    - nodeexp_targets.yml
    - snmp_targets.yml
    - blackbox_targets.yml


  # Not done inside role (Only needed if we are federating Prometheus)
  - name: Open Prometheus firewall ports
    tags:
    - monitoring
    - prometheus
    firewalld:
      port: "{{ item }}"
      immediate: yes
      permanent: yes
      state: enabled
    with_items:
    - 9090/tcp





# - name: Configure Grafana
#   remote_user: svc-ansible
#   become: true
#   hosts: grafana
#   vars_files:
#   - vault.yml

#   tasks:
#   # - name: Copy SSL key for grafana
#   #   copy:
#   #     src: "/etc/pki/tls/private/{{ ansible_fqdn }}.key"
#   #     dest: /etc/pki/tls/private/grafana.key
#   #     remote_src: true
#   #     owner: grafana
#   #     mode: '0600'

#   - import_role:
#       name: ansible-grafana
#     tags:
#     - monitoring
#     - grafana
