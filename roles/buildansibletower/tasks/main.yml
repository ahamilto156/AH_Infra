---
- name: Enable extras repo
  tags:
    - install
  command: subscription-manager repos --enable rhel-7-server-extras-rpms

# tasks file for buildansibletower
- name: get Ansible tower bundle
  tags:
    - install
  get_url:
    url: http://releases.ansible.com/ansible-tower/setup-bundle/ansible-tower-setup-bundle-{{ tower_version }}.el7.tar.gz
    dest: /tmp/ansible-tower-setup-bundle.tar.gz

- name: untar /tmp/ansible-tower-setup-bundle.tar.gz
  tags:
    - install
  unarchive:
    src: /tmp/ansible-tower-setup-bundle.tar.gz
    dest: /tmp/
    remote_src: true
    owner: root

# Allow other jobs to read the tower config dir. This is so that we can use the tower cert in CFME
- name: add /etc/tower path to setting.py
  tags:
    - install
  lineinfile:
    dest: /tmp/ansible-tower-setup-bundle-{{ tower_version }}.el7/roles/awx_install/templates/settings.py.j2
    line: "AWX_PROOT_SHOW_PATHS = ['/etc/tower/']"

- name: copy inventory to tower setup folder
  tags:
    - install
  template:
    src: templates/towerinventorysetup
    dest: /tmp/ansible-tower-setup-bundle-{{ tower_version }}.el7/inventory

- name: execute the tower installation
  tags:
    - install
  command: chdir=/tmp/ansible-tower-setup-bundle-{{ tower_version }}.el7 ./setup.sh
  register: towerinstall

- name: change perms on tower.cert
  tags:
    - install
  file:
    path: /etc/tower/tower.cert
    mode: 0444
    group: root
    owner: root

- name: add tower license
  tags:
    - install
  uri:
    url: https://{{ inventory_hostname }}/api/v1/config/
    method: POST
    validate_certs: no
    user: admin
    password: "{{ tower_pass }}"
    status_code: 200
    body: "{{ tower_lic }}"
    body_format: json

- name: install pip needed for tower manageiq-client
  tags:
    - install
  yum:
    name: python2-pip
    state: latest

- name: install manageiq-client
  tags:
    - install
  pip:
    name: manageiq-client

# Tower-cli from pip is a later version than python2-ansible-tower-cli RPM
- name: install ansible-tower-cli
  tags:
    - tower-cli
  pip:
    name: ansible-tower-cli

- name: copy tower-cli config /etc/tower/tower_cli.cfg
  tags:
    - tower-cli
  template:
    src: templates/tower_cli.cfg.j2
    dest: /etc/tower/tower_cli.cfg
    mode: 0600

- name: add svc-tower user
  tags:
    - tower-config
  tower_user:
    username: "{{ svc_user }}"
    password: "{{ svc_password }}"
    email: "{{ svc_email }}"
    first_name: Tower
    last_name: Generic
    state: present

# Needed for tower-cli methods for tower 3.2
- name: Set git_creds json
  tags:
    - tower-config
  set_fact:
    json_input:
      ssh_key_data: "{{ private_key }}"
      username: "{{ svc_user }}"
      password: "{{ svc_password }}"

# Needed for tower_credential method
#- name: ssh key
#  tags:
#    - tower-config
#  copy:
#    content: "{{ private_key }}"
#    dest: /tmp/ssh.key

# tower_credential module doesn't work yet with tower 3.2
- name: add svc-tower machine creds
  tags:
    - tower-config
#  tower_credential:
#    name: "{{ svc_user }}"
#    description: SSH key
#    organization: Default
#    state: present
#    username: "{{ svc_user }}"
#    kind: ssh
#    ssh_key_data: /tmp/ssh.key
  command: tower-cli credential create --name {{ svc_user }} -d 'SSH Key' --credential-type 1 --user {{ svc_user }} --inputs '{{ json_input | to_json }}'

# tower_credential module doesn't work yet with tower 3.2
- name: add svc-tower git creds
  tags:
    - tower-config
#  tower_credential:
#    name: "{{ svc_user }}_git"
#    description: git
#    organization: Default
#    state: present
#    username: "{{ svc_user }}"
#    kind: scm
#    ssh_key_data: /tmp/ssh.key
  command: tower-cli credential create --organization Default --name {{ svc_user }}_git --credential-type 2 --inputs '{{ json_input | to_json }}'
