---
# tasks file for ansible-role-influxdb

- include_tasks: setVersions.yml

- name: Install influxdb repo
  yum_repository:
    name: influxdb
    description: InfluxDB Repository - RHEL {{ ansible_distribution_major_version }}
    baseurl: https://repos.influxdata.com/rhel/{{ ansible_distribution_major_version }}/x86_64/stable
    enabled: true
    gpgcheck: true
    gpgkey: https://repos.influxdata.com/influxdb.key
  tags:
  - all
  - influx

- name: Install RPM packages
  yum:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
    - influxdb
  register: newinstall
  tags:
  - all
  - influx

- name: Install release specific RPM packages
  yum:
    name: "{{ packagelist }}"
    state: present
  tags:
  - all
  - influx

# PIP packages are required for Ansible influxdb modules
- name: Install PIP packages
  pip:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
    - influxdb
  tags:
  - all
  - influx

# On initial install of InfluxDB we need to use HTTP.
# Once the config is deployed we may need to use HTTPS, so detect and set that here
- set_fact:
    use_ssl: true
  when: influxdb_enable_ssl|bool

- set_fact:
    use_ssl: false
  when: newinstall.changed or not influxdb_enable_ssl|bool

# Build list of firewall ports to open
- name: Add HTTP port to firewall port list
  set_fact:
    fwports: "{{ influxdb_http_port }}/tcp"

- name: Add UDP port to firewall port list
  set_fact:
    fwports: "{{ fwports + [ '{{ influxdb_udp_port }/udp' ] }}"
  when: influxdb_enable_udp|bool

- name: Open InfluxDB Firewall ports
  firewalld:
    port: "{{ item }}"
    immediate: yes
    permanent: yes
    state: enabled
  with_items:
  - "{{ fwports }}"

- name: Copy SSL key for InfluxDB user
  copy:
    src: /etc/pki/tls/private/{{ ansible_fqdn }}.key
    dest: /etc/influxdb/{{ ansible_fqdn }}.key
    remote_src: true
    owner: influxdb
    mode: 0600
  when: influxdb_enable_ssl|bool

- name: Enable InfluxDB service
  service:
    name: influxdb
    state: started
    enabled: true
  tags:
  - all
  - influx

- name: Wait for HTTP port to come up
  wait_for:
    port: 8086

- name: Create InfluxDB admin user
  influxdb_user:
    login_username: "{{ influxdb_admin_user }}"
    login_password: "{{ influxdb_admin_password }}"
    hostname: "{{ influxdb_host }}"
    ssl: "{{ use_ssl }}"
    user_name: "{{ influxdb_admin_user }}"
    user_password: "{{ influxdb_admin_password }}"
    admin: true
    state: present
  no_log: true
  tags:
  - all
  - influx

- name: Create InfluxDB database
  influxdb_database:
    database_name: "{{ item.dbname }}"
    login_username: "{{ influxdb_admin_user }}"
    login_password: "{{ influxdb_admin_password }}"
    hostname: "{{ influxdb_host }}"
    ssl: "{{ use_ssl }}"
    state: present
  no_log: true
  with_items: "{{ influxdb_databases }}"
  tags:
  - all
  - influx

- name: Create InfluxDB users
  influxdb_user:
    login_username: "{{ influxdb_admin_user }}"
    login_password: "{{ influxdb_admin_password }}"
    hostname: "{{ influxdb_host }}"
    ssl: "{{ use_ssl }}"
    user_name: "{{ item.1.username }}"
    user_password: "{{ item.1.password }}"
    grants:
    - database: "{{ item.0.dbname }}"
      privilege: '{{ item.1.grants }}'
  with_subelements:
  - "{{ influxdb_databases }}"
  - dbusers
  no_log: true
  tags:
  - all
  - influx

- name: Deploy InfluxDB configuration
  template:
    src: influxdb.conf.j2
    dest: /etc/influxdb/influxdb.conf
    owner: root
    group: root
    mode: 0644
  notify: Restart InfluxDB
  tags:
  - all
  - influx
